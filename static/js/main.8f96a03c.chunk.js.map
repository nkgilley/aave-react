{"version":3,"sources":["components/Header.js","components/AddressForm.js","components/NetworkSelect.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","AddressForm","props","state","value","address","stateChanger","handleChange","bind","handleSubmit","connectMetamask","event","this","setState","target","toLowerCase","Web3","utils","isAddress","alert","preventDefault","getAccount","a","web3","givenProvider","eth","requestAccounts","accounts","console","log","_account","onSubmit","for","id","type","onChange","onClick","Component","NetworkSelect","network","US_ACCOUNTING","Intl","NumberFormat","style","currency","currencySign","US_PERCENT","minimumFractionDigits","APIURLS","query","token_prices","get_token_price_in_usd","ticker","replace","fetch","then","response","json","catch","error","data","hasOwnProperty","parseFloat","price","get_token_price_in_eth","token_in_usdt","eth_in_usdt","avaxClient","createClient","url","ethClient","clients","rewardTokens","App","RAY","WEI_DECIMALS","REWARD_DECIMALS","SECONDS_PER_YEAR","useState","setAddress","setNetwork","rates","setRates","setUserReserves","userSubtotals","setUserSubtotals","userTotals","setUserTotals","annualSubtotals","setAnnualSubtotals","annualTotals","setAnnualTotals","length","user_query","client","reward_token_ticker","toPromise","user_response","userReserves","_subtotals","_totals","_annual_subtotals","_annual_totals","_token_list","i","reserve","symbol","decimals","indexOf","currentATokenBalance","currentTotalDebt","_subtotal","_usdp","deposits","debt","format","push","_rates","REWARD_PRICE_ETH","reserves","token","includes","variableBorrowRate","liquidityRate","aEmissionPerSecond","vEmissionPerSecond","totalCurrentVariableDebt","totalATokenSupply","token_price_eth","underlying_token_decimals","depositAPR","variableBorrowAPR","depositAPY","variableBorrowAPY","aEmissionPerYear","vEmissionPerYear","incentiveDepositAPR","incentiveBorrowAPR","native","token_price","native_usd","avax_price","deposit_rewards_usd","borrow_rewards_usd","rewards","rewards_usd","_annual_subtotal","Object","entries","rate_types","rate_type","sum","useEffect","fetchData","class","scope","map","deposit","borrow","index","item","USD","total","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f96a03c.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.css'\n\nfunction Header() {\n    return (\n        <div className=\"App-header\">\n           <h1>AAVE Interest Calculator</h1>\n        </div>\n     );\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './AddressForm.css';\n\nclass AddressForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: this.props.address};\n    this.address = this.state.value\n    this.stateChanger = this.props.stateChanger;\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.connectMetamask = this.connectMetamask.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    let address = this.state.value.toLowerCase();\n    if (Web3.utils.isAddress(address)) {\n      this.stateChanger(address);\n      this.address = address\n    } else {\n      alert('Invalid ethereum address: ' + address)\n    }\n    event.preventDefault();\n  }\n\n  async connectMetamask(event) {\n    console.log('event',event)\n    async function getAccount() {\n      const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n      const accounts = await web3.eth.requestAccounts();\n      console.log('update state', accounts[0])\n      return accounts[0].toLowerCase()\n    }\n    let _account = await getAccount();\n    console.log('mmaccount', _account)\n    this.setState({value: _account});\n    this.stateChanger(_account)\n    this.address = _account\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"row\">\n          <div className=\"col-8\">\n            <label for=\"addressInput\">Address:</label>  \n            <input id=\"addressInput\" type=\"text\" value={this.state.value} onChange={this.handleChange} />\n            <input type=\"submit\" value=\"Manual\" className=\"btn btn-secondary\" />\n          </div>\n          <div className=\"col-4\">\n            <button type=\"button\" className=\"btn btn-dark float-end\" onClick={this.connectMetamask}>Connect Metamask</button>\n          </div>\n        </div>\n        {/* <p>Current Account: {this.address}</p> */}\n        \n      </form>\n    );\n  }\n}\n\nexport default AddressForm;\n","import React, { Component } from 'react';\nimport './NetworkSelect.css';\n\nclass NetworkSelect extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: this.props.network};\n    this.stateChanger = this.props.stateChanger;\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n    this.stateChanger(event.target.value)\n  }\n\n  render() {\n    return (\n      <form>\n        <div className=\"row justify-content-end mt-2\">\n          <div className=\"col-3\">\n            <select id=\"selectNetwork\" className=\"form-select\" value={this.state.value} onChange={this.handleChange}>\n              <option value=\"eth\">Mainnet</option>\n              <option value=\"avax\">Avalanche</option>\n              <option value=\"matic\">Matic</option>\n            </select>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default NetworkSelect;\n","import './App.css';\nimport Header from './components/Header.js';\nimport AddressForm from './components/AddressForm'\nimport NetworkSelect from './components/NetworkSelect'\nimport { createClient } from 'urql'\nimport { useEffect, useState } from 'react'\n\nconst US_ACCOUNTING = Intl.NumberFormat('en-US', {\n  style: \"currency\",\n  currency: \"USD\",\n  currencySign: \"accounting\"\n});\nconst US_PERCENT = Intl.NumberFormat('en-US', {\n  style: \"percent\",\n  minimumFractionDigits: 2\n});\n\nconst APIURLS = {'avax':'https://api.thegraph.com/subgraphs/name/aave/protocol-v2-avalanche',\n                  'matic': 'https://api.thegraph.com/subgraphs/name/aave/aave-v2-matic',\n                  'eth': 'https://api.thegraph.com/subgraphs/name/aave/protocol-v2'}\nconst query = `\nquery {\n  reserves (where: {}) {\n    id\n    name\n    price {\n      id\n      priceInEth\n    }\n    liquidityRate\n    variableBorrowRate\n    stableBorrowRate\n    aEmissionPerSecond\n    vEmissionPerSecond\n    decimals\n    totalATokenSupply\n    totalCurrentVariableDebt\n    symbol\n  }\n}\n`\n\n// keep a dict of token prices to avoid too many api calls to binance\nlet token_prices = {}\n\nasync function get_token_price_in_usd(ticker) {\n  ticker = ticker.replace('.e','').replace('W','')\n  if (ticker in token_prices) {\n  } else {\n    if (ticker !== 'USDT') {\n      if (ticker !== 'XSUSHI') {\n        token_prices[ticker] = await fetch(`https://api.binance.com/api/v3/ticker/price?symbol=${ticker}USDT`)\n          .then(response => response.json())\n          .catch(error => -1)\n          .then(data => {\n            if (data.hasOwnProperty(\"price\")) return parseFloat(data.price)\n            console.log('fetched from binance: ', ticker, token_prices[ticker])\n            return -1\n          })\n      } else { //xsushi\n        token_prices[ticker] = await fetch(`https://api.coingecko.com/api/v3/simple/price?ids=${ticker}&vs_currencies=usd`)\n        .then(response => response.json())\n        .catch(error => -1)\n        .then(data => {\n          if (data.hasOwnProperty(ticker.toLowerCase())) return parseFloat(data[ticker.toLowerCase()]['usd'])\n          console.log('fetched from coingecko: ', ticker, token_prices[ticker])\n          return -1\n        })\n      }\n    } else {\n      return 1.0\n    }\n  }\n  return token_prices[ticker]\n}\n\nasync function get_token_price_in_eth(ticker) {\n  let token_in_usdt = await get_token_price_in_usd(ticker)\n  let eth_in_usdt = await get_token_price_in_usd('ETH')\n  console.log('eth price of ', ticker, eth_in_usdt)\n  return token_in_usdt / eth_in_usdt\n}\n\nconst avaxClient = createClient({\n  url: APIURLS['avax']\n})\nconst ethClient = createClient({\n  url: APIURLS['eth']\n})\nconst maticClient = createClient({\n  url: APIURLS['matic']\n})\nconst clients = {'matic': maticClient, 'avax': avaxClient, 'eth': ethClient}\nconst rewardTokens = {'matic': 'WMATIC', 'avax': 'WAVAX', 'eth': 'WETH'}\n\nfunction App() {\n  \n  const RAY = 10**27\n  const WEI_DECIMALS = 10**18 // All emissions are in wei units, 18 decimal places\n  const REWARD_DECIMALS = 10**18 // All rewards have 18 decimal places (eth, matic, avax)\n  const SECONDS_PER_YEAR = 31536000\n\n  const [address, setAddress] = useState('')\n  const [network, setNetwork] = useState('avax')\n  const [rates, setRates] = useState({})\n  const [userReserves, setUserReserves] = useState([])\n  const [userSubtotals, setUserSubtotals] = useState([])\n  const [userTotals, setUserTotals] = useState({})\n  const [annualSubtotals, setAnnualSubtotals] = useState([])\n  const [annualTotals, setAnnualTotals] = useState({})\n\n  useEffect(() => {\n    fetchData()\n  }, [address, network]) // only rerun if address or network changes\n\n  async function fetchData() {\n    if (!address || address.length === 0) return\n    // clear data\n    setUserReserves([])\n    setUserSubtotals([])\n    setUserTotals({})\n    setRates({})\n    setAnnualSubtotals([])\n    setAnnualTotals({})\n\n    ///////////////////////////////////\n    // Get user specific data\n    //////////////////////////////////\n    const user_query = `\n    {\n      userReserves(where: { user: \"${address}\"}) {\n        id\n        reserve{\n          id\n          symbol\n        }\n        currentATokenBalance\n        currentTotalDebt\n      }\n    }\n    `\n    console.log('query',user_query)\n    let client = clients[network]\n    let reward_token_ticker = rewardTokens[network]\n    const user_response = await client.query(user_query).toPromise();\n    console.log('resp', user_response)\n    setUserReserves(user_response.data.userReserves);\n\n    let _subtotals = [] // {'symbol': 'WETH.e', 'debt': 0, 'deposits': 2}\n    let _totals = {'deposits': 0, 'debt': 0, 'sum': 0}\n    let _annual_subtotals = []\n    let _annual_totals = {'native': 0, 'rewards': 0, 'sum': 0}\n    let _token_list = [\"ETH\", \"MATIC\", \"AVAX\"]  //always get these rates\n    for (var i=0; i < user_response.data.userReserves.length; i++) {\n      let reserve = user_response.data.userReserves[i]\n      let symbol = reserve.reserve.symbol\n      let decimals = WEI_DECIMALS\n      if (symbol.indexOf('USDC') > -1 || symbol.indexOf('USDT') > -1) decimals = 10**6\n      let currentATokenBalance = parseFloat(reserve['currentATokenBalance']) / decimals\n      let currentTotalDebt  = parseFloat(reserve['currentTotalDebt']) / decimals\n      let _subtotal = {'symbol': symbol, 'debt': 0, 'deposits': 0}\n      console.log('tally',symbol, currentATokenBalance, currentTotalDebt)\n      let _usdp = await get_token_price_in_usd(symbol)\n      if (_usdp === -1) {\n        // token not found in binance api\n        continue\n      }\n      if (currentATokenBalance > 0) {\n        //console.log('val', val, currentATokenBalance, get_token_price_in_usd(symbol))\n        _subtotal['deposits'] += currentATokenBalance * _usdp\n      }\n      if (currentTotalDebt > 0) {\n        _subtotal['debt'] += currentTotalDebt * _usdp\n      }\n      _totals['deposits'] += _subtotal.deposits\n      _totals['debt'] += _subtotal.debt\n      _totals['sum'] += _subtotal.deposits - _subtotal.debt\n\n      // string formatting\n      _subtotal['sum'] = US_ACCOUNTING.format(_subtotal.deposits - _subtotal.debt)\n      _subtotal['deposits'] = US_ACCOUNTING.format(_subtotal.deposits)\n      _subtotal['debt'] = US_ACCOUNTING.format(_subtotal.debt)\n      if (currentATokenBalance > 0 || currentTotalDebt > 0) {\n        _token_list.push(symbol)\n        _subtotals.push(_subtotal)\n      }\n    }\n    console.log('token list', _token_list)\n\n    /////////////////////////////////////////\n    // get aave rates data from thegraph.\n    // only care about rates the user has balances for\n    /////////////////////////////////////////\n    console.log(network)\n    console.log(client)\n    const response = await client.query(query).toPromise();\n    let _rates = {}\n    const REWARD_PRICE_ETH = await get_token_price_in_eth(reward_token_ticker.replace('W',''))\n    for (var i=0; i < response.data.reserves.length; i++) {\n      let token = response.data.reserves[i]\n      let symbol = token['symbol']\n      console.log('111111',symbol, _token_list)\n      if (!_token_list.includes(symbol)) continue\n      let variableBorrowRate = parseFloat(token['variableBorrowRate'])\n      let liquidityRate = parseFloat(token['liquidityRate'])\n      let aEmissionPerSecond = parseFloat(token['aEmissionPerSecond'])\n      let vEmissionPerSecond = parseFloat(token['vEmissionPerSecond'])\n      let totalCurrentVariableDebt = parseFloat(token['totalCurrentVariableDebt'])\n      let totalATokenSupply  = parseFloat(token['totalATokenSupply'])   \n      let token_price_eth = await get_token_price_in_eth(symbol)\n      let underlying_token_decimals = 10**parseFloat(token['decimals'])\n\n      // Deposit and Borrow calculations\n      // APY and APR are returned here as decimals, multiply by 100 to get the percents     \n      let depositAPR = liquidityRate/RAY\n      let variableBorrowAPR = variableBorrowRate/RAY\n      let depositAPY = ((1 + (depositAPR / SECONDS_PER_YEAR)) ** SECONDS_PER_YEAR) - 1\n      let variableBorrowAPY = ((1 + (variableBorrowAPR / SECONDS_PER_YEAR)) ** SECONDS_PER_YEAR) - 1\n      \n      // Incentives calculation\n      let aEmissionPerYear = aEmissionPerSecond * SECONDS_PER_YEAR\n      let vEmissionPerYear = vEmissionPerSecond * SECONDS_PER_YEAR\n\n      // UNDERLYING_TOKEN_DECIMALS will be the decimals of token underlying the aToken or debtToken\n      // For Example, UNDERLYING_TOKEN_DECIMALS for aUSDC will be 10**6 because USDC has 6 decimals\n      console.log(\"======================== \" + symbol + \" =================================\"  )\n      console.log('(aEmissionPerYear * REWARD_PRICE_ETH * WEI_DECIMALS)', aEmissionPerYear, REWARD_PRICE_ETH, WEI_DECIMALS)\n      console.log('(totalATokenSupply * token_price_eth * underlying_token_decimals)', totalATokenSupply , token_price_eth , underlying_token_decimals)\n      console.log(\"======================== \" + symbol + \" =================================\"  )\n\n      let incentiveDepositAPR = (aEmissionPerYear * REWARD_PRICE_ETH * underlying_token_decimals)/\n                                (totalATokenSupply * token_price_eth * REWARD_DECIMALS)\n                                \n      let incentiveBorrowAPR = (vEmissionPerYear * REWARD_PRICE_ETH * underlying_token_decimals)/\n                                (totalCurrentVariableDebt * token_price_eth * REWARD_DECIMALS)\n\n      let incentiveDepositAPY = ((1 + (incentiveDepositAPR / 365)) ** 365) - 1\n      let incentiveBorrowAPY = ((1 + (incentiveBorrowAPR / 365)) ** 365) - 1\n\n      _rates[symbol] =  {'deposit': {'native': depositAPY }, 'borrow': {'native': variableBorrowAPY }}\n      // console.log('(aEmissionPerSecond * SECONDS_PER_YEAR * REWARD_PRICE_ETH * WAD) / (totalATokenSupply * token_price_eth * underlying_token_decimals)',(aEmissionPerSecond * SECONDS_PER_YEAR * REWARD_PRICE_ETH * WAD) / (totalATokenSupply * token_price_eth * underlying_token_decimals))\n      // console.log('(aEmissionPerSecond * SECONDS_PER_YEAR * REWARD_PRICE_ETH * WAD) / (totalATokenSupply * token_price_eth * underlying_token_decimals)',(aEmissionPerSecond * SECONDS_PER_YEAR * REWARD_PRICE_ETH * WAD))\n      // console.log('(totalATokenSupply * token_price_eth * underlying_token_decimals)',(totalATokenSupply * token_price_eth * underlying_token_decimals))\n      _rates[symbol]['deposit']['rewards'] = incentiveDepositAPR\n      if (totalCurrentVariableDebt > 0) {\n        _rates[symbol]['borrow']['rewards'] = incentiveBorrowAPR\n      } else {\n        _rates[symbol]['borrow']['rewards'] = 0\n      }\n    }\n    console.log('rate',_rates)\n    setRates(_rates)\n     \n\n    // Calculate annual rewards\n    for (var i=0; i < user_response.data.userReserves.length; i++) {\n      let reserve = user_response.data.userReserves[i]\n      let symbol = reserve.reserve.symbol\n      if (!_token_list.includes(symbol)) continue\n      console.log(symbol, _token_list)\n      let decimals = WEI_DECIMALS\n      if (symbol.indexOf('USDC') > -1 || symbol.indexOf('USDT') > -1) decimals = 10**6\n      let currentATokenBalance = parseFloat(reserve['currentATokenBalance']) / decimals\n      let currentTotalDebt  = parseFloat(reserve['currentTotalDebt']) / decimals\n      if (currentATokenBalance === 0 && currentTotalDebt === 0) continue\n      // calc native rewards\n      console.log('Annual rewards for this symbol', symbol)\n      let native = (currentATokenBalance * _rates[symbol]['deposit']['native']) - (currentTotalDebt * _rates[symbol]['borrow']['native'])\n      let token_price = await get_token_price_in_usd(symbol)\n      let native_usd = native * token_price\n      console.log('nativeusd', native_usd)\n      \n      // calc axax rewards (incentives)\n      let avax_price = await get_token_price_in_usd('AVAX')\n      let deposit_rewards_usd = currentATokenBalance * token_price * _rates[symbol]['deposit']['rewards']\n      let borrow_rewards_usd = currentTotalDebt * token_price * _rates[symbol]['borrow']['rewards']\n      let rewards = (deposit_rewards_usd + borrow_rewards_usd) / avax_price\n      console.log(symbol + ' Rewards', deposit_rewards_usd, borrow_rewards_usd)\n\n      let rewards_usd = deposit_rewards_usd + borrow_rewards_usd\n      // let rewards_usd = rewards * avax_price\n      console.log('rewards',rewards_usd)\n\n      _annual_totals['native'] += native_usd\n      _annual_totals['rewards'] += rewards_usd\n      _annual_totals['sum'] += native_usd + rewards_usd\n      let _annual_subtotal = {'symbol': symbol,\n                              'native':\n                                {'USD': US_ACCOUNTING.format(native_usd),\n                                  'native': native\n                                },\n                              'rewards':\n                                {'USD': US_ACCOUNTING.format(rewards_usd),\n                                  'WAVAX': rewards},\n                              'total':\n                                {'USD': US_ACCOUNTING.format(native_usd + rewards_usd)}}\n\n      _annual_subtotals.push(_annual_subtotal)\n    }\n\n    // format rates  _rates[symbol]['borrow']['rewards']\n    for (const [symbol, rate_types] of Object.entries(_rates)) {\n      for (const [rate_type, rates] of Object.entries(rate_types)) {\n        console.log('1', _rates[symbol][rate_type]['native'])\n        console.log('2', _rates[symbol][rate_type]['rewards'])\n        _rates[symbol][rate_type]['native'] = US_PERCENT.format(_rates[symbol][rate_type]['native'])\n        _rates[symbol][rate_type]['rewards'] = US_PERCENT.format(_rates[symbol][rate_type]['rewards'])\n        console.log('3', _rates[symbol][rate_type]['native'])\n        console.log('4', _rates[symbol][rate_type]['rewards'])\n      }\n    }\n    console.log(_rates)\n    setRates(_rates)\n    _totals['deposits'] = US_ACCOUNTING.format(_totals.deposits)\n    _totals['debt'] = US_ACCOUNTING.format(_totals.debt)\n    _totals['sum'] = US_ACCOUNTING.format(_totals.sum)\n    _annual_totals['native'] = US_ACCOUNTING.format(_annual_totals.native)\n    _annual_totals['rewards'] = US_ACCOUNTING.format(_annual_totals.rewards)\n    _annual_totals['sum'] = US_ACCOUNTING.format(_annual_totals.sum)\n    console.log('subtotals',_subtotals)\n    console.log('totals',_totals)\n    console.log('annual subtotals', _annual_subtotals)\n    setUserSubtotals(_subtotals)\n    setUserTotals(_totals)\n    setAnnualSubtotals(_annual_subtotals)\n    setAnnualTotals(_annual_totals)\n  }\n  return (\n    <div className=\"App\">\n      <Header class=\"row\" />\n      <div className=\"container mt-4\">\n      <AddressForm address={address} stateChanger={setAddress}/>\n      <NetworkSelect network={network} stateChanger={setNetwork}/>\n      <hr/>\n      <h3>Current Rates</h3>\n      <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Token</th>\n              <th scope=\"col\">Deposit APY</th>\n              <th scope=\"col\">Deposit Rewards APR</th>\n              <th scope=\"col\">Borrow APY</th>\n              <th scope=\"col\">Borrow Rewards APR</th>\n            </tr>\n          </thead>\n          <tbody>\n      {\n        Object.entries(rates).map(([symbol, data]) =>   //.map((rate, index) => (\n          <tr>\n            <th scope=\"row\">{symbol}</th>\n            <td>{data.deposit.native}</td>\n            <td>{data.deposit.rewards}</td>\n            <td>{data.borrow.native}</td>\n            <td>{data.borrow.rewards}</td>\n          </tr>\n        )\n      }\n        </tbody>\n      </table>\n      <br></br>\n      <h3>User Balances (USD)</h3>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Token</th>\n              <th scope=\"col\">Deposits</th>\n              <th scope=\"col\">Borrows</th>\n              <th scope=\"col\">Total</th>\n            </tr>\n          </thead>\n          <tbody>\n        {\n          userSubtotals.map((token, index) => (\n            <tr>\n              <th scope=\"row\">{token.symbol}</th>\n              <td>{token.deposits}</td>\n              <td>{token.debt}</td>\n              <td>{token.sum}</td>\n            </tr>\n          ))\n        }\n          </tbody>\n          <tfoot>\n          <tr>\n            <th scope=\"row\">Total</th>\n            { <td className=\"bold\">{userTotals.deposits}</td> }\n            { <td className=\"bold\">{userTotals.debt}</td> }\n            { <td className=\"bold\">{userTotals.sum}</td> }\n          </tr>\n          </tfoot>\n        </table>\n\n        <br></br>\n        <h3>Annual Interest (projected)</h3>\n        <table className=\"table\">\n        <thead>\n            <tr>\n              <th scope=\"col\">Token</th>\n              <th scope=\"col\">Native Interest</th>\n              <th scope=\"col\">Rewards</th>\n              <th scope=\"col\">Total</th>\n            </tr>\n          </thead>\n          <tbody>\n        {\n          annualSubtotals.map((item, index) => (\n            <tr>\n              <th scope=\"row\">{item.symbol}</th>\n              <td>{item.native.USD}</td>\n              <td>{item.rewards.USD}</td>\n              <td>{item.total.USD}</td>\n            </tr>\n          ))\n        }\n          </tbody>\n          <tfoot>\n            <tr>\n              <th scope=\"col\" className=\"total\">Total</th>\n              { <td className=\"bold\">{annualTotals.native}</td> }\n              { <td className=\"bold\">{annualTotals.rewards}</td> }\n              { <td className=\"bold\">{annualTotals.sum}</td> }\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}